# Copyright (c) 2021 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
#
# The peculiarity of this workflow is that assumes vcpkg stored as a submodule of this repository.
# This workflow does the following:
# - Restores vcpkg artifacts from cache.
# - Sets up vcpkg if needed, then run CMake with CMakePreset.json using a configuration
#   that leverages the vcpkg's toolchain file. This will automatically run vcpkg to install dependencies
#   described by the vcpkg.json manifest file. It will be a no-op if those are restored from cache.
# - Finally builds the sources with Ninja.
name: build
on: [workflow_dispatch]

jobs:
  VCPKG:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2022]
        include:
          - os: 'ubuntu-latest'
            mono: 'mono'
            triplet: 'x64-linux'
            artifact: 'x86_64-linux'
            exe_ext: ''
            build_dir: ninja-vcpkg
          - os: 'windows-2022'
            mono: ''
            triplet: 'x64-win'
            artifact: 'x86_64-windows'
            exe_ext: '.exe'
            build_dir: vs-vcpkg
          - os: 'macos-latest'
            mono: 'mono'
            triplet: 'x64-osx'
            artifact: 'x86_64-macos'
            exe_ext: ''
            build_dir: ninja-vcpkg

    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: seanmiddleditch/gha-setup-ninja@master
        if: startsWith(matrix.os, 'win')

      - uses: lukka/get-cmake@latest
        if: startsWith(matrix.os, 'win')

      - name: Setup MacOS
        if: startsWith(matrix.os, 'macOS')
        run: brew upgrade && brew install automake autoconf ninja cmake nuget || true

      - name: Setup Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt update && sudo apt upgrade && sudo apt install
          build-essential gperf ninja-build cmake
          libatspi2.0-dev
          libfontconfig1-dev
          libfreetype6-dev
          libgl1-mesa-dev
          libglu1-mesa-dev
          libx11-dev
          libx11-xcb-dev
          '^libxcb.*-dev'
          libxcb-damage0-dev
          libxcb-dpms0-dev
          libxcb-glx0-dev
          libxcb-icccm4-dev
          libxcb-image0-dev
          libxcb-keysyms1-dev
          libxcb-present-dev
          libxcb-randr0-dev
          libxcb-record0-dev
          libxcb-render-util0-dev
          libxcb-render0-dev
          libxcb-res0-dev
          libxcb-shape0-dev
          libxcb-shm0-dev
          libxcb-sync-dev
          libxcb-util-dev
          libxcb-xfixes0-dev
          libxcb-xinerama0-dev
          libxcb-xkb-dev
          libxcb1-dev
          libxext-dev
          libxfixes-dev
          libxi-dev
          libxkbcommon-dev
          libxkbcommon-x11-dev
          libxrender-dev
          libxrender-dev
          nuget

      - name: 'Bootstrap VCPKG'
        shell: bash
        run: vcpkg/bootstrap-vcpkg.sh

      - name: 'Setup NuGet Credentials (windows)'
        if: startsWith(matrix.os, 'win')
        shell: 'bash'
        run: >
          ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/free-audio/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "free-audio"
          -password "${{ secrets.GITHUB_TOKEN }}"

      - name: 'Setup NuGet Credentials (unix)'
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        shell: 'bash'
        run: >
          nuget sources add
          -source "https://nuget.pkg.github.com/free-audio/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "free-audio"
          -password "${{ secrets.GITHUB_TOKEN }}"

      - name: Build
        shell: bash
        run: scripts/build.sh ${{ matrix.triplet }}

      - name: Archive artifact
        shell: bash
        run: tar -cvJf clap-host.tar.xz --strip-components 4 builds/${{matrix.build_dir}}/host/Release/clap-host${{matrix.exe_ext}}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: clap-host-${{ matrix.artifact }}.tar.xz
          path: clap-host.tar.xz

      - uses: actions/delete-package-versions@v5
        with:
          package-name: qtbase_${{ matrix.triplet }}-clap-host